<template>
  <a-card :bordered="false">
    <div class="table-page-search-wrapper">
      <a-form layout="inline">
        <a-row :gutter="48">
          <a-col :md="8" :sm="24">
            <a-form-item label="角色ID">
              <a-input placeholder="请输入"/>
            </a-form-item>
          </a-col>
          <a-col :md="8" :sm="24">
            <a-form-item label="状态">
              <a-select placeholder="请选择" default-value="0">
                <a-select-option value="0">全部</a-select-option>
                <a-select-option value="1">关闭</a-select-option>
                <a-select-option value="2">运行中</a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :md="8" :sm="24">
            <span class="table-page-search-submitButtons">
              <a-button type="primary">查询</a-button>
              <a-button style="margin-left: 8px">重置</a-button>
               <a-button type="primary" style="margin-left: 8px" @click="handleAdd()">新增</a-button>
            </span>
          </a-col>
        </a-row>
      </a-form>
    </div>

    <s-table :columns="columns" :data="loadData"  :rowKey="record => record.id" ref="menu" :showPagination="false">

      <span slot="actions" slot-scope="text, record">
        <a-tag v-if="record.actionList.length>=1" v-for="(action, index) in record.actionList" :key="index">{{ action.describe }}</a-tag>
      </span>

      <span slot="status" slot-scope="text">
        {{ text | statusFilter }}
      </span>

      <span slot="action" slot-scope="text, record">
        <a @click="handleEdit(record)">编辑</a>
        <a-divider type="vertical"/>
        <a-dropdown>
          <a class="ant-dropdown-link">
            更多 <a-icon type="down"/>
          </a>
          <a-menu slot="overlay">
            <a-menu-item>
              <a href="javascript:;" @click="handleInfo(record)">详情</a>
            </a-menu-item>
            <a-menu-item>
              <a href="javascript:;">删除</a>
            </a-menu-item>
          </a-menu>
        </a-dropdown>
      </span>
    </s-table>
    <a-modal
      title="操作"
      :width="800"
      v-model="visible"
      @ok="handleOk"
      :afterClose="handleCancel"
      :destroyOnClose="true"
    >
      <a-form :form="form">

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="唯一识别码"
          hasFeedback
          validateStatus="success"
        >
          <a-input
            placeholder="唯一识别码"
            id="no"
            :disabled="display"
            v-decorator="[
                     'identify',
                     {
                       initialValue: mdl.identify,
                       rules: [{ required: true,message: '唯一标识码不能为空',whitespace:true}]
                     }
                   ]"
          />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="权限名称"
          hasFeedback
        >
          <a-input
            placeholder="起一个名字"
            id="permission_name"
            :disabled="disable"
            v-decorator="[
                     'name',
                     {
                       initialValue: mdl.name,
                       rules: [{ required: true,message: '权限名称不能为空',whitespace:true}]
                     }
                   ]"
          />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="状态"
          hasFeedback
        >
          <a-select v-model="mdl.status" :disabled="disable">
            <a-select-option :value="1">正常</a-select-option>
            <a-select-option :value="0">禁用</a-select-option>
          </a-select>
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="父级菜单"
          hasFeedback
        >
          <a-tree-select
            :dropdownStyle="{ maxHeight: '400px', overflow: 'auto' }"
            :treeData="ResourceName"
            placeholder='请选择父级菜单'
            treeDefaultExpandAll
            :disabled="disable"
            v-model="mdl.parents"
          ></a-tree-select>
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="排序"
          hasFeedback
        >
          <a-input
            placeholder="起一个名字"
            id="seq"
            :disabled="disable"
            v-decorator="[
              'seq',
              {
                initialValue: mdl.seq,
                rules: [{ required: true, message: '排序不能为空,且必须是数字',pattern:'^[0-9]*$'}],
              }
            ]"
          />
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="描述"
          hasFeedback
        >
          <a-textarea :rows="5" v-model="mdl.describe" placeholder="..." id="describe" :disabled="disable"/>
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="路径"
          hasFeedback
        >
          <a-input
            placeholder="请输入菜单路径"
            id="url"
            :disabled="disable"
            v-decorator="[
              'url',
              {
                initialValue: mdl.url,
                rules: [{ required: true, message: '请输入菜单路径'}],
              }
            ]"
          />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="菜单图标">
          <a-input placeholder="点击右侧按钮选择图标" v-model="mdl.icon">
            <a-icon slot="addonAfter" type="setting" @click="selectIcons" />
          </a-input>
        </a-form-item>

        <a-divider/>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="赋予权限"
          hasFeedback
        >
          <a-select
            style="width: 100%"
            mode="multiple"
            v-model="mdl.actions"
            :allowClear="true"
            :disabled="disable"
          >
            <a-select-option v-for="(action, index) in permissionList" :key="'info-'+index" :value="action.value">{{
              action.label }}
            </a-select-option>
          </a-select>
        </a-form-item>

      </a-form>
    </a-modal>
    <Icons  @choose="handleIconChoose" @close="handleIconCancel" :iconChooseVisible="iconChooseVisible"></Icons>
  </a-card>
</template>

<script>
  import { STable } from '@/components'
  import { mapActions } from 'vuex'
  import TagSelectOption from '../../components/TagSelect/TagSelectOption'
  import Icons from '@/components/icon/Icons'

  export default {
    name: 'TableList',
    components: {
      Icons,
      TagSelectOption,
      STable
    },
    data () {
      return {
        description: '',
        display: true,
        disable: false,
        visible: false,
        type: 0,
        isMenu: '',
        ResourceName: [],
        linkUrl: '',
        iconChooseVisible: false,
        labelCol: {
          xs: { span: 24 },
          sm: { span: 5 }
        },
        wrapperCol: {
          xs: { span: 24 },
          sm: { span: 16 }
        },
        form: this.$form.createForm(this),
        mdl: {},

        // 高级搜索 展开/关闭
        advanced: false,
        // 查询参数
        queryParam: {},
        // 表头
        columns: [
          {
            title: '权限名称',
            dataIndex: 'name'
          },
          {
            title: 'ID',
            dataIndex: 'id',
          },
          {
            title: '唯一识别码',
            dataIndex: 'identify'
          },
          {
            title: '可操作权限',
            dataIndex: 'actions',
            scopedSlots: { customRender: 'actions' }
          },
          {
            title: '状态',
            dataIndex: 'status',
            scopedSlots: { customRender: 'status' }
          },
          {
            title: '排序',
            dataIndex: 'seq'
          },
          {
            title: '操作',
            width: '150px',
            dataIndex: 'action',
            scopedSlots: { customRender: 'action' }
          }
        ],
        // 向后端拉取可以用的操作列表
        permissionList: null,
        // 加载数据方法 必须为 Promise 对象
        loadData: () => {
          return this.Permission().then(res => {
            console.log(res)
            this.ResourceName = res.data.ResourceName
            const result = res.data.ResourceData
            console.log(result)
            const temp = this.getActionList(result)
            const permission = {
              data: temp
            }
            console.log(permission)
            return permission
          }).catch(err => {
            return err
          })
        },

        selectedRowKeys: [],
        selectedRows: []
      }
    },
    filters: {
      statusFilter (status) {
        const statusMap = {
          1: '正常',
          0: '禁用'
        }
        return statusMap[status]
      }
    },
    created () {
      this.loadPermissionList()
    },
    methods: {
      ...mapActions(['Permission', 'AddMenu', 'ModifyMenu']),
      loadPermissionList () {
        // permissionList
        new Promise(resolve => {
          const data = [
            { label: '新增', value: 'Add', defaultChecked: false },
            { label: '查询', value: 'Show', defaultChecked: false },
            { label: '修改', value: 'Edit', defaultChecked: false },
            { label: '删除', value: 'Delete', defaultChecked: false },
            { label: '授权', value: 'Auth', defaultChecked: false }
          ]
          setTimeout(resolve(data), 1500)
        }).then(res => {
          this.permissionList = res
        })
      },
      handleEdit (record) {
        this.mdl = Object.assign({}, record)
        this.isMenu = String(this.mdl.id)
        if (this.mdl.seq) {
          this.mdl.seq = String(this.mdl.seq)
        }
        this.mdl.parents  = String(this.mdl.parents)
        console.log(typeof this.mdl.parents)
        console.log(this.mdl)
        this.visible = true
        this.display = true
        this.type = 2
      },
      handleInfo (record) {
        this.type = 0
        this.mdl = Object.assign({}, record)
        if (this.mdl.seq) {
          this.mdl.seq = String(this.mdl.seq)
        }
        console.log(this.mdl)
        this.visible = true
        this.disable = true
        this.display = true
      },
      handleAdd () {
        this.type = 1
        this.mdl = {
          status: 1
        }
        this.display = false
        this.visible = true
      },
      handleOk () {
        const {
          form: { validateFields },
          mdl,
          AddMenu,
          ModifyMenu
        } = this
        validateFields({ force: true }, (errs, values) => {
          if (!errs) {
            const params = {}
            params.id = mdl.id
            params.name = values.name
            params.identify = values.identify
            params.seq = values.seq
            params.status = mdl.status
            params.actionType = ''
            for (let i = 0; i < mdl.actions.length; i++) {
              params.actionType += mdl.actions[i] + ','
            }
            params.actionType = params.actionType.substring(0, params.actionType.length - 1)
            params.describe = mdl.describe
            params.parents = mdl.parents ? mdl.parents : null
            params.iconUrl = mdl.url
            params.linkUrl = mdl.linkUrl
            console.log(params)
            if (this.type === 1) {
              AddMenu(params).then(res => {
                this.notice(res)
                this.$refs.menu.refresh(true)
              }).catch(err => {

              })
              this.visible = false
            } else if (this.type === 2) {
              console.log('当前菜单ID',this.isMenu)
              console.log('父级菜单ID',mdl.parents)
              if(this.isMenu==mdl.parents) {
                this.notice({msg:'不能将自身菜单设置为父级菜单！'})
              }else {
                ModifyMenu(params).then(res => {
                  this.notice(res)
                  this.$refs.menu.refresh(true)
                }).catch(err => {

                })
                this.visible = false
              }
            }

          } else {
            console.log('校验失败')
          }
        })
      },
      selectIcons(){
        this.iconChooseVisible = true
      },
      handleCancel () {
        this.disable = false
      },
      handleIconCancel () {
        this.iconChooseVisible = false
      },
      handleIconChoose (value) {
        console.log(value)
        this.mdl.icon = value
        this.iconChooseVisible = false
      },
      onChange (selectedRowKeys, selectedRows) {
        this.selectedRowKeys = selectedRowKeys
        this.selectedRows = selectedRows
      },
      toggleAdvanced () {
        this.advanced = !this.advanced
      },
      getActionList (result) {
        if (result instanceof Array) {
          result.map(permission => {
            console.log('tags' + permission.actionData)
            permission.actionList = permission.actionData
            if (permission.children && permission.children.length) {
              this.getActionList(permission.children)
            }
            return permission
          })
          return result
        }
      },
      notice (res) {
        this.$notification.success({
          message: '结果',
          description: res.msg
        })
      }
    },
    watch: {}
  }
</script>
